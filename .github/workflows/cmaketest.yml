name: CMake Test

on:
  push:
    branches:
      - build_test

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        fetch-depth: 2
        submodules: true  # 拉取子模块

    - name: Set up CMake
      uses: lukka/get-cmake@v3

    - name: Install dependencies (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: sudo apt install -y cmake git build-essential gdb libcairo2-dev libxcb1-dev libgl1-mesa-dev freeglut3-dev libgtk-3-dev

    - name: Configure CMake
      run: cmake -B build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      run: cmake --build build --config ${{env.BUILD_TYPE}}

    - name: Create file structure
      run: |
        if [ ${{ matrix.os }} == 'windows-latest' ]; then
          tree /F /A | Out-File file_structure.txt
        else
          tree -a > file_structure.txt
        fi

    - name: Upload demo (Windows)
      if: matrix.os == 'windows-latest'
      uses: actions/upload-artifact@v2
      with:
        name: PC_Demo
        path: |
          build/bin/*.exe
          build/bin/*.dll
          build/bin/Config/**

    - name: Upload demo (Linux)
      if: matrix.os == 'ubuntu-latest'
      uses: actions/upload-artifact@v2
      with:
        name: Linux_Demo
        path: |
          build/bin/*
          build/bin/Config/**
          !build/bin/*.a
          !build/bin/*.o

    - name: Upload file structure
      uses: actions/upload-artifact@v2
      with:
        name: file_structure
        path: file_structure.txt



